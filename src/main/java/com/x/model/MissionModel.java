package com.x.model;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

import org.hibernate.annotations.GenericGenerator;

@Entity
@Table(name = "TABLE_MISSION")
public class MissionModel
{
	
		// ==============
		// PRIVATE FIELDS
		// ==============
		// An autogenerated id (unique for each user in the db)
		
		@Id
		@GeneratedValue(generator = "uuid")
	    @GenericGenerator(name = "uuid", strategy = "uuid")
	 	private java.lang.String id;
		
		/**
		 * 任务完成人
		 */
		@NotNull
		@Column(name = "ACCOUNT", unique = true, nullable = false, updatable = false)
	    private String account;
		
		/**
		 * 创建时间
		 */
		private java.sql.Timestamp time ;
		
		/**
		 * 任务阶段
		 */
		private Integer period;
		
		/**
		 * 任务内容
		 */
		private String content;
		
		/**
		 * 任务描述
		 */
		private String description;
		
		
	    
	    public MissionModel() { ; }


		public void setId( java.lang.String id)
	    {
	    	this.id = id ;
	    }
	    
	    public void setAccount( String account)
	    {
	    	this.account = account ;
	    }
	    
	    public java.lang.String getId() 
	    {
	        return id;
	    }

	    public String getAccount() 
	    {
	        return account;
	    }

		public java.sql.Timestamp getTime() 
		{
			return time;
		}

		public void setTime(java.sql.Timestamp time) 
		{
			this.time = time;
		}


		public Integer getPeriod() 
		{
			return period;
		}


		public void setPeriod(Integer period) 
		{
			this.period = period;
		}


		public String getContent() 
		{
			return content;
		}


		public void setContent(String content) 
		{
			this.content = content;
		}


		public String getDescription() 
		{
			return description;
		}


		public void setDescription(String description) 
		{
			this.description = description;
		}
	    
		
		
	    
}
